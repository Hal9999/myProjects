package redcat.ui;

import redcat.common.*;
import redcat.common.event.*;
import redcat.manager.*;
import redcat.sensor.*;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultCaret;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 * Classe che implementa la GUI grafica del Sensor del sistema RedCat
 * 
 * @author Lanzafame Flavio, Russo Giorgia, Spadaro Stefano, Torrelli Denisia
 */
public class SensorGUIMain extends JFrame implements Observer<ExtendedEvent>
{
    private Sensor sensor;

    /**
     * Creates new form SensorSideMainGUI
     */
    public SensorGUIMain()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        sensorPanel = new javax.swing.JPanel();
        sensorLabel = new javax.swing.JLabel();
        sensorTextField = new javax.swing.JTextField();
        sensorLockBackbroundPanel = new javax.swing.JPanel();
        sensorLockLabel = new javax.swing.JLabel();
        sensorOKButton = new javax.swing.JButton();
        libraryPanel = new javax.swing.JPanel();
        libraryLabel = new javax.swing.JLabel();
        libraryTextField = new javax.swing.JTextField();
        libraryLockBackbroundPanel = new javax.swing.JPanel();
        libraryLockLabel = new javax.swing.JLabel();
        libraryOKButton = new javax.swing.JButton();
        logPanel = new javax.swing.JPanel();
        logLabel = new javax.swing.JLabel();
        logTextField = new javax.swing.JTextField();
        logLockBackbroundPanel = new javax.swing.JPanel();
        logLockLabel = new javax.swing.JLabel();
        logOKButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        faultTextArea = new javax.swing.JTextArea();
        ((DefaultCaret)faultTextArea.getCaret()).setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        perfomanceTextArea = new javax.swing.JTextArea();
        ((DefaultCaret)perfomanceTextArea.getCaret()).setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        monitoringTextArea = new javax.swing.JTextArea();
        ((DefaultCaret)monitoringTextArea.getCaret()).setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jPanel7 = new javax.swing.JPanel();
        stopButton = new javax.swing.JButton();
        sensorStatusPanel = new javax.swing.JPanel();
        sensorStatusLabel = new javax.swing.JLabel();
        serverStatusPanel = new javax.swing.JPanel();
        serverStatusLabel = new javax.swing.JLabel();
        goToggleButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RedCat - Sensor");
        setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("redcat/resources/iconaSensor.gif")));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        sensorLabel.setText("Sensor XML");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sensorPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), sensorLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sensorTextField.setText("./configurationFiles/sensorSideConfiguration.xml");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sensorPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), sensorTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sensorLockBackbroundPanel.setBackground(new java.awt.Color(255, 255, 51));
        sensorLockBackbroundPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sensorPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), sensorLockBackbroundPanel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sensorLockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sensorLockLabel.setText("Browse");
        sensorLockLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sensorPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), sensorLockLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sensorLockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sensorLockLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sensorLockBackbroundPanelLayout = new javax.swing.GroupLayout(sensorLockBackbroundPanel);
        sensorLockBackbroundPanel.setLayout(sensorLockBackbroundPanelLayout);
        sensorLockBackbroundPanelLayout.setHorizontalGroup(
            sensorLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorLockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        sensorLockBackbroundPanelLayout.setVerticalGroup(
            sensorLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorLockLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        sensorOKButton.setText("OK");
        sensorOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorOKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sensorPanelLayout = new javax.swing.GroupLayout(sensorPanel);
        sensorPanel.setLayout(sensorPanelLayout);
        sensorPanelLayout.setHorizontalGroup(
            sensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sensorPanelLayout.createSequentialGroup()
                .addComponent(sensorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorLockBackbroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        sensorPanelLayout.setVerticalGroup(
            sensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorLockBackbroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sensorPanelLayout.createSequentialGroup()
                .addGroup(sensorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sensorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sensorLabel))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sensorPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(sensorOKButton))
        );

        libraryLabel.setText("Event Library");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, libraryPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), libraryLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        libraryTextField.setText("./configurationFiles/eventTypeLibrary.xml");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, libraryPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), libraryTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        libraryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libraryTextFieldActionPerformed(evt);
            }
        });

        libraryLockBackbroundPanel.setBackground(new java.awt.Color(255, 255, 51));
        libraryLockBackbroundPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, libraryPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), libraryLockBackbroundPanel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        libraryLockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libraryLockLabel.setText("Browse");
        libraryLockLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, libraryPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), libraryLockLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        libraryLockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libraryLockLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout libraryLockBackbroundPanelLayout = new javax.swing.GroupLayout(libraryLockBackbroundPanel);
        libraryLockBackbroundPanel.setLayout(libraryLockBackbroundPanelLayout);
        libraryLockBackbroundPanelLayout.setHorizontalGroup(
            libraryLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(libraryLockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        libraryLockBackbroundPanelLayout.setVerticalGroup(
            libraryLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(libraryLockLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        libraryOKButton.setText("OK");
        libraryOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libraryOKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout libraryPanelLayout = new javax.swing.GroupLayout(libraryPanel);
        libraryPanel.setLayout(libraryPanelLayout);
        libraryPanelLayout.setHorizontalGroup(
            libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(libraryPanelLayout.createSequentialGroup()
                .addComponent(libraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(libraryTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(libraryLockBackbroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(libraryOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        libraryPanelLayout.setVerticalGroup(
            libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(libraryLockBackbroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(libraryPanelLayout.createSequentialGroup()
                .addGroup(libraryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(libraryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(libraryLabel))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, libraryPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(libraryOKButton))
        );

        logLabel.setText("Log File");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, logPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), logLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        logTextField.setText("./logs/eventHistory.txt");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, logPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), logTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        logTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logTextFieldActionPerformed(evt);
            }
        });

        logLockBackbroundPanel.setBackground(new java.awt.Color(255, 255, 51));
        logLockBackbroundPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, logPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), logLockBackbroundPanel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        logLockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logLockLabel.setText("Browse");
        logLockLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, logPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), logLockLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        logLockLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logLockLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout logLockBackbroundPanelLayout = new javax.swing.GroupLayout(logLockBackbroundPanel);
        logLockBackbroundPanel.setLayout(logLockBackbroundPanelLayout);
        logLockBackbroundPanelLayout.setHorizontalGroup(
            logLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logLockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        logLockBackbroundPanelLayout.setVerticalGroup(
            logLockBackbroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logLockLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        logOKButton.setText("OK");
        logOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addComponent(logLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logLockBackbroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logLockBackbroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logLabel))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logOKButton))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(libraryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(sensorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(libraryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Events History"));
        jPanel2.setLayout(new java.awt.GridLayout(3, 1));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Fault"));

        faultTextArea.setColumns(20);
        faultTextArea.setEditable(false);
        faultTextArea.setRows(5);
        jScrollPane3.setViewportView(faultTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Performance"));

        perfomanceTextArea.setColumns(20);
        perfomanceTextArea.setEditable(false);
        perfomanceTextArea.setRows(5);
        jScrollPane1.setViewportView(perfomanceTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Monitoring"));

        monitoringTextArea.setColumns(20);
        monitoringTextArea.setEditable(false);
        monitoringTextArea.setRows(5);
        jScrollPane2.setViewportView(monitoringTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        stopButton.setText("PAUSE");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        sensorStatusPanel.setBackground(new java.awt.Color(255, 102, 0));
        sensorStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sensor"));

        sensorStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        sensorStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sensorStatusLabel.setText("-");

        javax.swing.GroupLayout sensorStatusPanelLayout = new javax.swing.GroupLayout(sensorStatusPanel);
        sensorStatusPanel.setLayout(sensorStatusPanelLayout);
        sensorStatusPanelLayout.setHorizontalGroup(
            sensorStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sensorStatusPanelLayout.setVerticalGroup(
            sensorStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sensorStatusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        serverStatusPanel.setBackground(new java.awt.Color(255, 102, 0));
        serverStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Server"));

        serverStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        serverStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        serverStatusLabel.setText("-");

        javax.swing.GroupLayout serverStatusPanelLayout = new javax.swing.GroupLayout(serverStatusPanel);
        serverStatusPanel.setLayout(serverStatusPanelLayout);
        serverStatusPanelLayout.setHorizontalGroup(
            serverStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        serverStatusPanelLayout.setVerticalGroup(
            serverStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverStatusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        goToggleButton.setText("GO");
        goToggleButton.setEnabled(false);
        goToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sensorStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serverStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sensorStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stopButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serverStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stopButtonActionPerformed
    {//GEN-HEADEREND:event_stopButtonActionPerformed
        sensorStatusLabel.setText("PAUSED");
        sensorStatusPanel.setBackground(Color.orange);
        serverStatusLabel.setText("PAUSED");
        serverStatusPanel.setBackground(Color.orange);
        
        goToggleButton.setSelected(false);
        goToggleButton.setEnabled(true);
        stopButton.setEnabled(false);
        
        sensor.pause();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void goToggleButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_goToggleButtonActionPerformed
    {//GEN-HEADEREND:event_goToggleButtonActionPerformed
        
        sensor = null;
        try
        {
            EventLibrary recognizer = new EventLibrary(new File(libraryTextField.getText()));
            sensor = new Sensor(new File(sensorTextField.getText()), recognizer);
            sensor.registerObserver(this);
            
            sensor.go();
            
            goToggleButton.setEnabled(false);
            stopButton.setEnabled(true);
            
            sensorStatusPanel.setBackground(Color.green);
            sensorStatusLabel.setText("RUNNING");
        }
        catch (ParserConfigurationException ex)
        {
            sensorStatusPanel.setBackground(Color.red);
            sensorStatusLabel.setText("ERROR");
            
            Logger.getLogger(SensorGUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SAXException ex)
        {
            sensorStatusPanel.setBackground(Color.red);
            sensorStatusLabel.setText("ERROR");
            
            Logger.getLogger(SensorGUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex)
        {
            sensorStatusPanel.setBackground(Color.red);
            sensorStatusLabel.setText("ERROR");
            
            Logger.getLogger(SensorGUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            Observer server = new ManagerServerProxy(new File(sensorTextField.getText()));
            sensor.registerObserver(server);
            
            serverStatusPanel.setBackground(Color.green);
            serverStatusLabel.setText("RUNNING");
        }
        catch (Exception ex)
        {
            serverStatusPanel.setBackground(Color.red);
            serverStatusLabel.setText("ERROR");
            
            Logger.getLogger(SensorGUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        logOKButton.setEnabled(false);
        sensorOKButton.setEnabled(false);
        libraryOKButton.setEnabled(false);
        
        logPanel.setEnabled(false);
        if(logLockBackbroundPanel.getBackground() == Color.green)
        {
            logLockLabel.setText("ENABLED");
            ToFileObserver fileObserver;
            try
            {
                fileObserver = new ToFileObserver(new File(logTextField.getText()));
                sensor.registerObserver(fileObserver);
            }
            catch (IOException ex)
            {
                logLockLabel.setText("ERROR");
                logLockBackbroundPanel.setBackground(Color.red);
                
                Logger.getLogger(SensorGUIMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else logLockLabel.setText("DISABLED");
        
    }//GEN-LAST:event_goToggleButtonActionPerformed

    private void sensorOKButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sensorOKButtonActionPerformed
    {//GEN-HEADEREND:event_sensorOKButtonActionPerformed
        // TODO add your handling code here:
        if( (new File(sensorTextField.getText())).exists() )
        {
            sensorPanel.setEnabled(false);
            sensorLockLabel.setText("READY");
            sensorLockBackbroundPanel.setBackground(Color.green);
        }
        else
        {
            sensorLockLabel.setText("ERROR");
            sensorLockBackbroundPanel.setBackground(Color.red);
        }
        
        if( sensorLockBackbroundPanel.getBackground() == Color.green && libraryLockBackbroundPanel.getBackground() == Color.green)
            goToggleButton.setEnabled(true);
            
    }//GEN-LAST:event_sensorOKButtonActionPerformed

    private void libraryOKButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_libraryOKButtonActionPerformed
    {//GEN-HEADEREND:event_libraryOKButtonActionPerformed
        if( (new File(libraryTextField.getText())).exists() )
        {
            libraryPanel.setEnabled(false);
            libraryLockLabel.setText("READY");
            libraryLockBackbroundPanel.setBackground(Color.green);
        }
        else
        {
            libraryLockLabel.setText("ERROR");
            libraryLockBackbroundPanel.setBackground(Color.red);
        }
        
        if( sensorLockBackbroundPanel.getBackground() == Color.green && libraryLockBackbroundPanel.getBackground() == Color.green)
        goToggleButton.setEnabled(true);
    }//GEN-LAST:event_libraryOKButtonActionPerformed

    private void libraryTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_libraryTextFieldActionPerformed
    {//GEN-HEADEREND:event_libraryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libraryTextFieldActionPerformed

    private void sensorLockLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_sensorLockLabelMouseClicked
    {//GEN-HEADEREND:event_sensorLockLabelMouseClicked
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("xml", "XML");
        chooser.setFileFilter(filter);
        
        int returnVal = chooser.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            sensorTextField.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_sensorLockLabelMouseClicked

    private void libraryLockLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_libraryLockLabelMouseClicked
    {//GEN-HEADEREND:event_libraryLockLabelMouseClicked
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("xml", "XML");
        chooser.setFileFilter(filter);
        
        int returnVal = chooser.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            libraryTextField.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_libraryLockLabelMouseClicked

    private void logTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_logTextFieldActionPerformed
    {//GEN-HEADEREND:event_logTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logTextFieldActionPerformed

    private void logLockLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_logLockLabelMouseClicked
    {//GEN-HEADEREND:event_logLockLabelMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("xml", "XML");
        chooser.setFileFilter(filter);
        
        int returnVal = chooser.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            logTextField.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_logLockLabelMouseClicked

    private void logOKButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_logOKButtonActionPerformed
    {//GEN-HEADEREND:event_logOKButtonActionPerformed
        logPanel.setEnabled(false);
        logLockLabel.setText("ENABLED");
        logLockBackbroundPanel.setBackground(Color.green);
    }//GEN-LAST:event_logOKButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
//            String systemLookAndFeelClassName = javax.swing.UIManager.getSystemLookAndFeelClassName();
//            if( systemLookAndFeelClassName.equalsIgnoreCase("com.sun.java.swing.plaf.gtk.GTKLookAndFeel"))
//                javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
//            else
//                javax.swing.UIManager.setLookAndFeel(systemLookAndFeelClassName);
        }
        catch (Exception ex)
        {
            java.util.logging.Logger.getLogger(SensorGUIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        try
        {
            com.apple.eawt.Application macApp = com.apple.eawt.Application.getApplication();
            macApp.setDockIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("redcat/resources/iconaManager.gif")));
        }
        catch(RuntimeException ex) {}
        
        /*
         * Create and display the form
         */
        
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                JFrame gui = new SensorGUIMain();
                gui.setLocationByPlatform(true);
                gui.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea faultTextArea;
    private javax.swing.JToggleButton goToggleButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel libraryLabel;
    private javax.swing.JPanel libraryLockBackbroundPanel;
    private javax.swing.JLabel libraryLockLabel;
    private javax.swing.JButton libraryOKButton;
    private javax.swing.JPanel libraryPanel;
    private javax.swing.JTextField libraryTextField;
    private javax.swing.JLabel logLabel;
    private javax.swing.JPanel logLockBackbroundPanel;
    private javax.swing.JLabel logLockLabel;
    private javax.swing.JButton logOKButton;
    private javax.swing.JPanel logPanel;
    private javax.swing.JTextField logTextField;
    private javax.swing.JTextArea monitoringTextArea;
    private javax.swing.JTextArea perfomanceTextArea;
    private javax.swing.JLabel sensorLabel;
    private javax.swing.JPanel sensorLockBackbroundPanel;
    private javax.swing.JLabel sensorLockLabel;
    private javax.swing.JButton sensorOKButton;
    private javax.swing.JPanel sensorPanel;
    private javax.swing.JLabel sensorStatusLabel;
    private javax.swing.JPanel sensorStatusPanel;
    private javax.swing.JTextField sensorTextField;
    private javax.swing.JLabel serverStatusLabel;
    private javax.swing.JPanel serverStatusPanel;
    private javax.swing.JButton stopButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * 
     * @param event
     */
    @Override
    public void report(ExtendedEvent event)
    {
        String text = "sID: " + event.sensorID + " -> " + event.time + " :: " + event.niceString + " = " + event.value;
        
        if( event.type.equalsIgnoreCase("Fault") )
            faultTextArea.append(text + "\n");
        else if( event.type.equalsIgnoreCase("Performance") )
            perfomanceTextArea.append(text + "\n");
        if( event.type.equalsIgnoreCase("Monitoring") )
            monitoringTextArea.append(text + "\n");
    }
}
